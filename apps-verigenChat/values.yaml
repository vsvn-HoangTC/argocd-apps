# Common
namespace: verigen-chat

releaseName: verigen-chat

image:
  frontend: vsvndev/vsvn_chatgpt:frontend-latest
  backend: vsvndev/vsvn_chatgpt:backend-latest
  pullPolicy: Always
  pullSecrets:
    - name: docker-registry-secret

replicaCount:
  frontend: 1
  backend: 1

service:
  frontend:
    type: ClusterIP
    port: 3000
    targetPort: 80
  backend:
    type: ClusterIP
    port: 8000
    targetPort: 8000

ingress:
  enabled: true
  className: nginx
  host: verigen-chat.dev.veriserve-vietnam.com
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
  tls:
    enabled: false
    secretName: verigen-chat-tls

mariadb:
  enabled: true
  image: mariadb:latest
  database: chatgpt_db
  username: chatgpt_user
  password: changeme
  rootPassword: changeme
  persistence:
    enabled: false
    size: 5Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

minio:
  enabled: false

aws:
  region: ap-northeast-1
  s3:
    endpoint: ""
    bucket: verigen-chat-bucket

secrets:
  # Add your environment variables here
  # For production, use sealed secrets or external secret manager

resources:
  frontend:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  backend:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "2Gi"
      cpu: "500m"