{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          {{- if .Values.postgres.resources }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: postgres-storage
          {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Release.Name }}-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
{{- if .Values.postgres.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgres-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
{{- end }}
{{- end }}