# Template mặc định cho ArgoCD Application
appName: ""
argoNamespace: "argocd"
project: "default"

source:
  repoURL: ""
  targetRevision: "HEAD"
  path: ""
  helm:
    valueFiles:
      - values.yaml

destination:
  server: "https://kubernetes.default.svc"
  namespace: ""

syncPolicy:
  automated:
    prune: true
    selfHeal: true
  syncOptions:
    - CreateNamespace=true

# Default values for templates
namespace: "default"

# Flexible Container Configuration
# Define any number of containers with custom configurations
containers: {}
  # Example structure:
  # rag-fe:
  #   enabled: true
  #   image: "your-image:tag"
  #   replicas: 1
  #   containerPort: 3000
  #   service:
  #     enabled: true
  #     port: 80
  #     targetPort: 3000
  #     type: ClusterIP
  #   env: {}
  #   envFrom: []
  #   command: []
  #   args: []
  #   volumeMounts: []
  #   volumes: []
  #   resources: {}

# Legacy: Application Components - Use 'containers' instead
components:
  frontend:
    enabled: false
    image: ""
    replicas: 1
    port: 80
    targetPort: 80
    env: {}
    envFrom: []
    resources: {}
  
  backend:
    enabled: false
    image: ""
    replicas: 1
    port: 8000
    targetPort: 8000
    command: []
    env: {}
    envFrom: []
    volumeMounts: []
    volumes: []
    resources: {}
  
  worker:
    enabled: false
    image: ""
    replicas: 1
    env: {}
    resources: {}

# Database Services
databases:
  postgres:
    enabled: false
    image: "postgres:15"
    username: ""
    password: ""
    database: ""
    persistence:
      enabled: true
      size: "10Gi"
  
  mongo:
    enabled: false
    image: "mongo:6"
    username: ""
    password: ""
    database: ""
    persistence:
      enabled: true
      size: "10Gi"
  
  mariadb:
    enabled: false
    image: "mariadb:latest"
    username: ""
    password: ""
    database: ""
    rootPassword: ""
    persistence:
      enabled: true
      size: "10Gi"
  
  redis:
    enabled: false
    image: "redis:7"
    persistence:
      enabled: true
      size: "5Gi"
  
  qdrant:
    enabled: false
    image: "qdrant/qdrant:latest"
    persistence:
      enabled: true
      size: "10Gi"

# Storage Services
storage:
  minio:
    enabled: false
    image: "minio/minio:latest"
    accessKey: ""
    secretKey: ""
    persistence:
      enabled: true
      size: "20Gi"



secrets:
  enabled: false
  jwtSecret: ""
  openaiKey: ""

postgres:
  enabled: false
  username: ""
  password: ""
  database: ""

mongo:
  enabled: false
  username: ""
  password: ""
  database: ""

redis:
  enabled: false

qdrant:
  enabled: false

mariadb:
  enabled: false
  username: ""
  password: ""
  database: ""

minio:
  enabled: false
  accessKey: ""
  secretKey: ""

aws:
  enabled: false
  region: ""
  credentials:
    accessKeyId: ""
    secretAccessKey: ""
  s3:
    enabled: false
    endpoint: ""
    bucket: ""

ingress:
  enabled: false
  className: "nginx"
  host: ""
  annotations: {}
  hosts: []
  tls:
    enabled: false
    secretName: ""

dockerRegistry:
  enabled: true
  username: ""
  token: ""
  email: ""
  secretName: "docker-registry-secret"
  dockerconfigjson: ""

imagePullSecrets: "docker-registry-secret"

resources:
  frontend: {}
  backend: {}
  worker: {}