# Template mặc định cho ArgoCD Application
appName: ""
argoNamespace: "argocd"
project: "default"

source:
  repoURL: ""
  targetRevision: "HEAD"
  path: ""
  helm:
    valueFiles:
      - values.yaml

destination:
  server: "https://kubernetes.default.svc"
  namespace: ""

syncPolicy:
  automated:
    prune: true
    selfHeal: true
  syncOptions:
    - CreateNamespace=true

# Default values for templates

replicaCount:
  frontend: 1
  backend: 1
  worker: 1

namespace: "default"

image:
  frontend: ""
  backend: ""
  worker: ""
  pullPolicy: Always

imagePullSecrets: ""

resources:
  frontend: {}
  backend: {}
  worker: {}

frontend:
  enabled: true
  env: {}
  envFrom: []

backend:
  enabled: true
  command: []
  env: {}
  envFrom: []
  volumeMounts: []
  volumes: []

worker:
  enabled: false
  env: {}

service:
  frontend:
    type: ClusterIP
    port: 80
    targetPort: 80
  backend:
    type: ClusterIP
    port: 8000
    targetPort: 8000

secrets:
  enabled: true
  jwtSecret: ""
  openaiKey: ""

postgres:
  enabled: false
  username: ""
  password: ""
  database: ""

mongo:
  enabled: false
  username: ""
  password: ""
  database: ""

redis:
  enabled: false

qdrant:
  enabled: false

mariadb:
  enabled: false
  username: ""
  password: ""
  database: ""

minio:
  enabled: false
  accessKey: ""
  secretKey: ""

aws:
  enabled: false
  region: ""
  credentials:
    accessKeyId: ""
    secretAccessKey: ""
  s3:
    enabled: false
    endpoint: ""
    bucket: ""

ingress:
  enabled: false
  className: "nginx"
  host: ""
  annotations: {}
  hosts: []
  tls:
    enabled: false
    secretName: ""

dockerRegistry:
  enabled: false
  secretName: "docker-registry-secret"
  dockerconfigjson: ""