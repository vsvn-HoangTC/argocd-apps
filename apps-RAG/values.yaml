# Common
namespace: rag-system

releaseName: rag

image:
  frontend: vsvndev/vsvn_rag:frontend-latest
  backend: vsvndev/vsvn_rag:backend-latest
  worker: vsvndev/vsvn_rag:worker-latest
  pullPolicy: Always
  pullSecrets:
    - name: docker-registry-secret

replicaCount:
  frontend: 1
  backend: 1
  worker: 1

service:
  frontend:
    type: ClusterIP
    port: 8110
    targetPort: 80
  backend:
    type: ClusterIP
    port: 8000
    targetPort: 8000

ingress:
  enabled: true
  className: nginx
  host: rag.dev.veriserve-vietnam.com
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
  tls:
    enabled: false
    secretName: rag-tls

postgres:
  enabled: true
  image: postgres:15
  username: rag_user
  password: changeme
  database: rag_db
  persistence:
    enabled: false
    size: 5Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

mongo:
  enabled: true
  image: mongo:6
  username: mongo_user
  password: changeme
  database: rag_mongo
  persistence:
    enabled: false
    size: 5Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

redis:
  enabled: true
  image: redis:7
  persistence:
    enabled: false
    size: 1Gi
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"

qdrant:
  enabled: true
  image: qdrant/qdrant:latest
  persistence:
    enabled: false
    size: 5Gi
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"

env:
  frontend:
    ssoEndpoint: "https://aitl-dev.az.veriserve-vietnam.com/sso/"
    domainSSO: ".az.veriserve-vietnam.com"

secrets:
  jwtSecret: "CHANGE_ME_JWT"
  openaiKey: "CHANGE_ME_OPENAI"
  # For production, use sealed secrets or external secret manager

resources:
  frontend:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  backend:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  worker:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"
